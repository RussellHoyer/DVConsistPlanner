using System.Collections.Generic;
using System.Linq;

namespace DVConsistPlanner.Models
{
    public class Job
    {
        public Job()
        {
            LicenseRequirements = new List<object>();
        }
        #region Properties
        
        /// <summary>
        /// Index identifier.
        /// </summary>
        public int ID { get; set; }
        /// <summary>
        /// The departing station, the origin of the cargo to be transported.
        /// </summary>
        /// <remarks>
        /// This is usually the station displayed on the top of the card.
        /// </remarks>
        public Station Departing { get; set; }
        /// <summary>
        /// The arriving station, the destination for the cargo being transported.
        /// </summary>
        /// <remarks>
        /// This is usually the station displayed on the bottom of the card.
        /// </remarks>
        public Station Arriving { get; set; }
        /// <summary>
        /// The defintion of the kind of transport taking place.
        /// </summary>
        public JobType JobType { get; set; }
        /// <summary>
        /// Job number that was generated by the game.
        /// </summary>
        public int JobNumber { get; set; }
        /// <summary>
        /// Payout of the job, without time bonus.
        /// </summary>
        public int Payout { get; set; }
        /// <summary>
        /// The amount of time set to get the bonus.
        /// </summary>
        public int TimeBonus { get; set; }
        /// <summary>
        /// The value of the cars in this job, represented in Millions.
        /// </summary>
        public decimal TrainValue { get; set; }
        /// <summary>
        /// The total mass of the cars in this job.
        /// </summary>
        public decimal TrainMass { get; set; }
        /// <summary>
        /// The total length of all cars in the job.
        /// </summary>
        public decimal TrainLength { get; set; }
        /// <summary>
        /// NOT YET IMPLEMENTED
        /// </summary>
        public List<object> LicenseRequirements { get; set; }
        #endregion
        #region Fields
        /// <summary>
        /// The abbreviated name of the job (what you see in your toolbelt).
        /// </summary>
        public string JobName { get { return $"{Departing.Abbreviation}-{GetJobAbbreviation(JobType)}-{JobNumber:D2}"; } }
        /// <summary>
        /// The total payout including the bonus for completing the job before the time is up.
        /// </summary>
        public int BonusPayout { get { return (int)(Payout * 1.5); } }
        #endregion
        public static string GetJobAbbreviation(JobType jobType)
        {
            string result = jobType switch
            {
                JobType.Logistic => "LH",
                JobType.Freight => "FH",
                JobType.ShuntingLoad => "SL",
                JobType.ShuntingUnload => "SU",
                _ => "",
            };
            return result;
        }
    }
    public enum JobType
    {
        Logistic = 0,
        Freight = 1,
        ShuntingLoad = 2,
        ShuntingUnload = 3
    }
    // Job specific extensions
    public static partial class Extensions
    {
        public static Job? GetJob(this List<Job> jobList, int jobNumber)
        {
            return jobList.FirstOrDefault(j => j.JobNumber == jobNumber);
        }
    }
}
